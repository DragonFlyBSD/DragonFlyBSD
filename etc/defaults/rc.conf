#!/bin/sh
#

# This is rc.conf - a file full of useful variables that you can set
# to change the default startup behavior of your system.  You should
# not edit this file!  Put any overrides into one of the ${rc_conf_files}
# instead and you will be able to update these defaults later without
# spamming your local configuration information.
#
# The ${rc_conf_files} files should only contain values which override
# values set in this file.  This eases the upgrade path when defaults
# are changed and new features are added.
#
# All arguments must be in double or single quotes.
#
# $FreeBSD: src/etc/defaults/rc.conf,v 1.180 2003/06/26 09:50:50 smkelly Exp $

##############################################################
###  Important initial Boot-time options  ####################
##############################################################

rc_debug="NO"		# Set to YES to enable debugging output from rc.d
rc_info="YES"		# Enables display of informational messages at boot.
rc_startmsgs="YES" 	# Show "Starting foo:" messages at boot
rcshutdown_timeout="30" # Seconds to wait before terminating rc.shutdown
swapfile="NO"		# Set to name of swapfile if aux swapfile desired.
powerd_enable="NO"	# Run powerd to adjust CPU speed.
sensorsd_enable="NO"	# Run sensorsd to monitor and log sensor state changes.
sensorsd_flags=""	# additional flags for sensorsd(8).
hotplugd_enable="NO"	# Run hotplugd to monitor devices hot plugging.
hotplugd_flags=""	# additional flags for hotplugd(8)
pccard_ifconfig="NO"	# Specialized pccard ethernet configuration (or NO).
pccard_ether_delay="5"	# Delay before trying to start dhclient in pccard_ether
removable_interfaces=""	# Removable network interfaces for /etc/pccard_ether.
local_startup="/usr/local/etc/rc.d /usr/pkg/etc/rc.d"
			# startup script dirs.
script_name_sep=" "	# Change if your startup scripts' names contain spaces
rc_conf_files="/etc/rc.conf /etc/rc.conf.local"
fsck_y_enable="NO"	# Set to YES to do fsck -y if the initial preen fails.
netfs_types="nfs:NFS smbfs:SMB portalfs:PORTAL" # Net filesystems.
extra_netfs_types="NO"	# List of network extra filesystem types for delayed
			# mount at startup (or NO).
devfs_config_files="/etc/defaults/devfs.conf /etc/devfs.conf"
			# Config files for devfs(5)

##############################################################
###  Network configuration sub-section  ######################
##############################################################

### Basic network and firewall/security options: ###
#
# see 'man firewall' for an explanation of the default firewall rules
#
hostname=""			# Set this!
nisdomainname="NO"		# Set to NIS domain if using NIS (or NO).
dhclient_program="/sbin/dhclient"	# Path to dhcp client program.
dhclient_flags="-w"		# Additional flags to pass to dhcp client.
firewall_enable="NO"		# Set to YES to enable firewall functionality
firewall_script="/etc/rc.firewall" # Which script to run to set up the firewall
firewall_type="UNKNOWN"		# Firewall type (see /etc/rc.firewall)
firewall_trusted_nets="192.168.0.0/16" # list of trusted nets
firewall_trusted_interfaces=""  # list of trusted interfaces e.g. "rl0 xl0"
firewall_allowed_icmp_types="0 3 8 11 12 13 14"
firewall_open_tcp_ports="22 25 53 80 113 443"
firewall_open_udp_ports="53"
firewall_quiet="NO"		# Set to YES to suppress rule display
firewall_logging="NO"		# Set to YES to enable events logging
firewall_flags=""		# Flags passed to ipfw when type is a file
ip_portrange_first="NO"		# Set first dynamically allocated port
ip_portrange_last="NO"		# Set last dynamically allocated port
ipsec_enable="NO"		# Set to YES to run setkey on ipsec_file
ipsec_file="/etc/ipsec.conf"	# Name of config file for setkey
natd_program="/sbin/natd"	# path to natd, if you want a different one.
natd_enable="NO"		# Enable natd (if firewall_enable == YES).
natd_interface=""		# Public interface or IPaddress to use.
natd_flags=""			# Additional flags for natd.
pf_enable="NO"			# Set to YES to enable packet filter (pf)
pf_rules="/etc/pf.conf"		# rules definition file for pf
pf_program="/usr/sbin/pfctl"	# where the pfctl program lives
pf_flags=""			# additional flags for pfctl
pflog_enable="NO"		# Set to YES to enable packet filter logging
pflog_logfile="/var/log/pflog"	# where pflogd should store the logfile
pflog_program="/usr/sbin/pflogd"	# where the pflogd program lives
pflog_flags=""			# additional flags for pflogd
tcp_extensions="YES"		# Set to NO to turn off RFC1323 extensions.
log_in_vain="0"			# >=1 to log connects to ports w/o listeners.
tcp_keepalive="YES"		# Enable stale TCP connection timeout (or NO).
# For the following option you need to have TCP_DROP_SYNFIN set in your
# kernel.  Please refer to LINT64 details.
tcp_drop_synfin="NO"		# Set to YES to drop TCP packets with SYN+FIN
				# NOTE: this violates the TCP specification
icmp_drop_redirect="NO" 	# Set to YES to ignore ICMP REDIRECT packets
icmp_log_redirect="NO"		# Set to YES to log ICMP REDIRECT packets
network_interfaces="auto"	# List of network interfaces (or "auto").
cloned_interfaces=""		# List of cloned network interfaces to create.
#cloned_interfaces="gif0 gif1 gif2 gif3" # Pre-cloning X86_64_GENERIC config.
ifconfig_lo0="inet 127.0.0.1"	# default loopback device configuration.
#ifconfig_lo0_alias0="inet 127.0.0.254 netmask 0xffffffff" # Sample alias entry.
#ifconfig_fxp0_name="net0"	# Change interface name from fxp0 to net0.
#
# If you have any sppp(4) interfaces above, you might also want to set
# the following parameters.  Refer to spppcontrol(8) for their meaning.
sppp_interfaces=""		# List of sppp interfaces.
#sppp_interfaces="...0"		# example: sppp over ...
#spppconfig_...0="authproto=chap myauthname=foo myauthsecret='top secret' hisauthname=some-gw hisauthsecret='another secret'"
gif_interfaces="NO"		# List of GIF tunnels (or "NO").
#gif_interfaces="gif0 gif1"	# Examples typically for a router.
				# Choose correct tunnel addrs.
#gifconfig_gif0="10.1.1.1 10.1.2.1"	# Examples typically for a router.
#gifconfig_gif1="10.1.1.2 10.1.2.2"	# Examples typically for a router.

# User ppp configuration.
ppp_enable="NO"		# Start user-ppp (or NO).
ppp_mode="auto"		# Choice of "auto", "ddial", "direct" or "dedicated".
			# For details see man page for ppp(8). Default is auto.
ppp_nat="YES"		# Use PPP's internal network address translation or NO.
ppp_profile="papchap"	# Which profile to use from /etc/ppp/ppp.conf.
ppp_user="root"		# Which user to run ppp as

### Network daemon (miscellaneous) ###
hostapd_enable="NO"		# Run hostap daemon.
syslogd_enable="YES"		# Run syslog daemon (or NO).
syslogd_program="/usr/sbin/syslogd" # path to syslogd, if you want a different one.
#syslogd_flags="-s"		# Flags to syslogd (if enabled).
syslogd_flags="-ss"		# Syslogd flags to not bind an inet socket
inetd_enable="NO"		# Run the network daemon dispatcher (YES/NO).
inetd_program="/usr/sbin/inetd"	# path to inetd, if you want a different one.
inetd_flags="-wW"		# Optional flags to inetd

rwhod_enable="NO"		# Run the rwho daemon (or NO).
rwhod_flags=""			# Flags for rwhod
rarpd_enable="NO"		# Run rarpd (or NO).
rarpd_flags=""			# Flags to rarpd.
bootparamd_enable="NO"		# Run bootparamd (or NO).
bootparamd_flags=""		# Flags to bootparamd
pppoed_enable="NO"		# Run the PPP over Ethernet daemon.
pppoed_provider="*"		# Provider and ppp(8) config file entry.
pppoed_flags="-P /var/run/pppoed.pid"	# Flags to pppoed (if enabled).
pppoed_interface="fxp0"		# The interface that pppoed runs on.
sshd_enable="NO"		# Enable sshd
sshd_program="/usr/sbin/sshd"	# path to sshd, if you want a different one.
sshd_flags=""			# Additional flags for sshd.

ftpd_enable="NO"		# Run stand-alone ftp daemon (or NO).
ftpd_flags=""			# Flags for ftpd, -D added implicitly.

### Network File System (NFS): ###
### Server-side options also need rpcbind_enable="YES" ###
###
### NOTE: attribute cache timeouts only effect NFS lookup rpc's.  If
### the mtime matches the data cache is left intact.
###
amd_enable="NO"			# Run amd service with $amd_flags (or NO).
amd_flags="-a /.amd_mnt -l syslog /host /etc/amd.map /net /etc/amd.map"
amd_map_program="NO"		# Can be set to "ypcat -k amd.master"
nfs_client_enable="NO"		# This host is an NFS client (or NO).
nfs_access_cache="5"		# Client attribute cache timeout in seconds
#nfs_neg_cache="3"		# Client attribute negative hit cache timeout
nfs_server_enable="NO"		# This host is an NFS server (or NO).
nfs_server_flags="-u -t -n 4"	# Flags to nfsd (if enabled).
mountd_enable="NO"		# Run mountd (or NO).
mountd_flags="-r"		# Flags to mountd (if NFS server enabled).
weak_mountd_authentication="NO"	# Allow non-root mount requests to be served.
nfs_reserved_port_only="NO"	# Provide NFS only on secure port (or NO).
nfs_bufpackets=""		# bufspace (in packets) for client
rpc_lockd_enable="NO"		# Run NFS rpc.lockd needed for client/server.
rpc_lockd_flags=""		# Flags to rpc.lockd (if enabled).
rpc_statd_enable="NO"		# Run NFS rpc.statd needed for client/server.
rpc_statd_flags=""		# Flags to rpc.statd (if enabled).
rpc_umntall_enable="YES"	# Run NFS rpc.umntall on boot and shutdown
rpcbind_enable="NO"		# Run the portmapper service (YES/NO).
rpcbind_program="/usr/sbin/rpcbind"	# path to rpcbind, if you want a different one.
rpcbind_flags=""		# Flags to rpcbind (if enabled).
rpc_ypupdated_enable="NO"	# Run if NIS master and SecureRPC (or NO).
keyserv_enable="NO"		# Run the SecureRPC keyserver (or NO).
keyserv_flags=""		# Flags to keyserv (if enabled).

### Network Time Services options: ###
timed_enable="NO"		# Run the time daemon (or NO).
timed_flags=""			# Flags to timed (if enabled).
dntpd_enable="NO"		# Run dntpd Network Time Protocol (or NO).
dntpd_program="/usr/sbin/dntpd"	# path to dntpd, if you want a different one.
dntpd_flags=""			# Flags to dntpd (if enabled) also server name(s)

# Bluetooth deamons and options:
btconfig_enable="NO"		# Configure Bluetooth devices (or NO).
btconfig_devices=""		# List of Bluetooth devices (or empty for all).
#btconfig_<device>=""		# Parameters to pass to <device>.
btconfig_args=""		# Parameters to pass to all devices.
sdpd_enable="NO"		# Run the Service Discovery Profile daemon (or NO).
sdpd_flags=""			# Flags to sdpd (if enabled).
bthcid_enable="NO"		# Run the Bluetooth Link Key/PIN Code Manager (or NO).
bthcid_flags=""			# Flags to bthcid (if enabled).

# Network Information Services (NIS) options: All need rpcbind_enable="YES" ###
nis_client_enable="NO"		# We're an NIS client (or NO).
nis_client_flags=""		# Flags to ypbind (if enabled).
nis_ypset_enable="NO"		# Run ypset at boot time (or NO).
nis_ypset_flags=""		# Flags to ypset (if enabled).
nis_server_enable="NO"		# We're an NIS server (or NO).
nis_server_flags=""		# Flags to ypserv (if enabled).
nis_ypxfrd_enable="NO"		# Run rpc.ypxfrd at boot time (or NO).
nis_ypxfrd_flags=""		# Flags to rpc.ypxfrd (if enabled).
nis_yppasswdd_enable="NO"	# Run rpc.yppasswdd at boot time (or NO).
nis_yppasswdd_flags=""		# Flags to rpc.yppasswdd (if enabled).

### Network routing options: ###
defaultrouter="NO"		# Set to default gateway (or NO).
static_routes=""		# Set to static route list (or leave empty).
gateway_enable="NO"		# Set to YES if this host will be a gateway.
router_enable="NO"		# Set to YES to enable a routing daemon.
router_program="/sbin/routed"		# Name of routing daemon to use if enabled.
router_flags="-q"		# Flags for routing daemon.
mrouted_enable="NO"		# Do multicast routing (see /etc/mrouted.conf).
mrouted_flags=""		# Flags for multicast routing daemon.
arpproxy_all="NO"		# replaces obsolete kernel option ARP_PROXYALL.
forward_sourceroute="NO"	# do source routing (only if gateway_enable is set to "YES")
accept_sourceroute="NO"		# accept source routed packets to us

### Miscellaneous network options: ###
icmp_bmcastecho="NO"	# respond to broadcast ping packets

### IPv6 options: ###
ipv6_enable="NO"		# Set to YES to set up for IPv6.
ipv6_network_interfaces="auto"	# List of network interfaces (or "auto").
ipv6_defaultrouter="NO"		# Set to IPv6 default gateway (or NO).
#ipv6_defaultrouter="2002:c058:6301::"	# Use this for 6to4 (RFC 3068)
ipv6_static_routes=""		# Set to static route list (or leave empty).
#ipv6_static_routes="xxx"	# An example to set fec0:0000:0000:0006::/64
				#  route toward loopback interface.
#ipv6_route_xxx="fec0:0000:0000:0006:: -prefixlen 64 ::1"
ipv6_gateway_enable="NO"	# Set to YES if this host will be a gateway.
ipv6_router_enable="NO"		# Set to YES to enable an IPv6 routing daemon.
ipv6_router_program="/usr/sbin/route6d"	# Name of IPv6 routing daemon.
ipv6_router_flags=""		# Flags to IPv6 routing daemon.
#ipv6_router_flags="-l"		# Example for route6d with only IPv6 site local
				# addrs.
#ipv6_router_flags="-q"		# If you want to run a routing daemon on an end
				# node, you should stop advertisement.
#ipv6_network_interfaces="ed0 ep0"	# Examples for router
					# or static configuration for end node.
					# Choose correct prefix value.
#ipv6_prefix_ed0="fec0:0000:0000:0001 fec0:0000:0000:0002"  # Examples for rtr.
#ipv6_prefix_ep0="fec0:0000:0000:0003 fec0:0000:0000:0004"  # Examples for rtr.
#ipv6_ifconfig_ed0="fec0:0:0:5::1 prefixlen 64"	# Sample manual assign entry
#ipv6_ifconfig_ed0_alias0="fec0:0:0:5::2 prefixlen 64" # Sample alias entry.
ipv6_default_interface="NO"	# Default output interface for scoped addrs.
				# Now this works only for IPv6 link local
				# multicast addrs.
rtadvd_enable="NO"		# Set to YES to enable an IPv6 router
				# advertisement daemon. If set to YES,
				# this router becomes a possible candidate
				# IPv6 default router for local subnets.
rtadvd_interfaces=""		# Interfaces rtadvd sends RA packets.
rtsold_enable="NO"		# Set to YES to enable an IPv6 routing
				# solicitation daemon.  This is used for
				# automatic discovery of non-link local
				# addresses.
rtsold_flags="-a"		# Do autoprobing of outgoing interface.
mroute6d_enable="NO"		# Do IPv6 multicast routing.
mroute6d_program="/usr/local/sbin/pim6dd"	# Name of IPv6 multicast
						# routing daemon.  You need to
						# install it from package or
						# port.
mroute6d_flags=""		# Flags to IPv6 multicast routing daemon.
stf_interface_ipv4addr=""	# Local IPv4 addr for 6to4 IPv6 over IPv4
				# tunneling interface. Specify this entry
				# to enable 6to4 interface.
stf_interface_ipv4plen="0"	# Prefix length for 6to4 IPv4 addr,
				# to limit peer addr range. Effective value
				# is 0-31.
stf_interface_ipv6_ifid="0:0:0:1"	# IPv6 interface id for stf0.
				# If you like, you can set "AUTO" for this.
stf_interface_ipv6_slaid="0000"	# IPv6 Site Level Aggregator for stf0
ipv6_faith_prefix="NO"		# Set faith prefix to enable a FAITH
				# IPv6-to-IPv4 TCP translator.  You also need
				# faithd(8) setup.
ipv6_firewall_enable="NO"	# Set to YES to enable IPv6 firewall
				# functionality
ipv6_firewall_script="/etc/rc.firewall6" # Which script to run to set up the IPv6 firewall
ipv6_firewall_type="UNKNOWN"	# IPv6 Firewall type (see /etc/rc.firewall6)
ipv6_firewall_quiet="NO"	# Set to YES to suppress rule display
ipv6_firewall_logging="NO"	# Set to YES to enable events logging
ipv6_firewall_flags=""		# Flags passed to ip6fw when type is a file

##############################################################
###  System console options  #################################
##############################################################

keymap="NO"		# keymap in /usr/share/syscons/keymaps/* (or NO).
keyrate="NO"		# keyboard rate to: slow, normal, fast (or NO).
keybell="NO" 		# See kbdcontrol(1) for options.  Use "off" to disable.
keychange="NO"		# function keys default values (or NO).
cursor="NO"		# cursor type {normal|blink|destructive} (or NO).
scrnmap="NO"		# screen map in /usr/share/syscons/scrnmaps/* (or NO).
font8x16="NO"		# font 8x16 from /usr/share/syscons/fonts/* (or NO).
font8x14="NO"		# font 8x14 from /usr/share/syscons/fonts/* (or NO).
font8x8="NO"		# font 8x8 from /usr/share/syscons/fonts/* (or NO).
blanktime="300"		# blank time (in seconds) or "NO" to turn it off.
saver="NO"		# screen saver: Uses /modules/${saver}_saver.ko
moused_nondefault_enable="YES" # Treat non-default mice as enabled unless
			       # specifically overriden in rc.conf(5).
moused_enable="NO"	# Run the mouse daemon.
moused_type="auto"	# See man page for rc.conf(5) for available settings.
moused_port="/dev/psm0"	# Set to your mouse port.
moused_flags=""		# Any additional flags to moused.
mousechar_start="NO"	# if 0xd0-0xd3 default range is occupied in your
			# language code table, specify alternative range
			# start like mousechar_start=3, see vidcontrol(1)
vidhistory=""		# Set video history buffer size
allscreens_flags=""	# Set this vidcontrol mode for all virtual screens
allscreens_kbdflags=""	# Set this kbdcontrol mode for all virtual screens


##############################################################
###  Mail Transfer Agent (MTA) options  ######################
##############################################################

mta_start_script="/etc/rc.sendmail"
			# Script to start your chosen MTA, called by /etc/rc.
# Settings for /etc/rc.sendmail:
sendmail_enable="NO"	# Run the sendmail inbound daemon (YES/NO).
sendmail_flags="-L sm-mta -bd -q30m" # Flags to sendmail (as a server)
sendmail_submit_enable="YES"	# Start a localhost-only MTA for mail submission
sendmail_submit_flags="-L sm-mta -bd -q30m -ODaemonPortOptions=Addr=localhost"
				# Flags for localhost-only MTA
sendmail_outbound_enable="YES"	# Dequeue stuck mail (YES/NO).
sendmail_outbound_flags="-L sm-queue -q30m" # Flags to sendmail (outbound only)
sendmail_msp_queue_enable="YES"	# Dequeue stuck clientmqueue mail (YES/NO).
sendmail_msp_queue_flags="-L sm-msp-queue -Ac -q30m"
				# Flags for sendmail_msp_queue daemon.
sendmail_rebuild_aliases="YES"	# Run newaliases if necessary (YES/NO).


##############################################################
###  Miscellaneous administrative options  ###################
##############################################################

mixer_enable="YES"	# Manage mixer settings across reboots
cron_enable="YES"	# Run the periodic job daemon.
cron_program="/usr/sbin/cron"	# Which cron executable to run (if enabled).
cron_flags=""		# Which options to pass to the cron daemon.
lpd_enable="NO"		# Run the line printer daemon.
lpd_program="/usr/sbin/lpd"	# path to lpd, if you want a different one.
lpd_flags=""		# Flags to lpd (if enabled).
nscd_enable="NO"	# Run the nsswitch caching daemon.
devd_enable="YES" 	# Run devd, to trigger programs on device tree changes.
devd_flags=""		# Additional flags for devd(8).
dumpdev="NO"		# Device name to crashdump to (or NO).
dumpdir="/var/crash"	# Directory where crash dumps are to be stored
savecore_flags=""	# Used if dumpdev is enabled above, and present.
crashinfo_enable="YES"	# Automatically generate crash dump summary.
crashinfo_program="/usr/sbin/crashinfo"	# Script to generate crash dump summary.
enable_quotas="NO"	# turn on quotas on startup (or NO).
check_quotas="YES"	# Check quotas on startup (or NO).
accounting_enable="NO"	# Turn on process accounting (or NO).
sysvipcd_enable="NO"	# Run the System V IPC daemon at startup (or NO).
linux_enable="NO"	# Linux binary compatibility loaded at startup (or NO).
clear_tmp_enable="NO"	# Clear /tmp at startup.
ldconfig_insecure="NO"	# Set to YES to disable ldconfig security checks
ldconfig_paths="/lib /usr/lib /usr/lib/compat /usr/local/lib /usr/pkg/lib"
			# shared library search paths
ldconfig_local_dirs="/usr/local/libdata/ldconfig"
			# Local directories with ldconfig configuration files.
kern_securelevel="-1"	# range: -1..3 ; `-1' is the most insecure
update_motd="YES"	# update version info in /etc/motd (or NO)
start_vinum="NO"	# set to YES to start vinum
udevd_enable="NO"	# Run udevd(8) daemon.
udevd_early="NO"	# Run udevd(8) daemon early in boot (for lvm).
lvm_enable="NO"		# Run LVM volume discovery.
entropy_file="/entropy"	# Set to NO to disable caching entropy through reboots.
entropy_save_sz="16384"	# Size of the entropy cache files (in bytes)
rand_irqs="NO"		# Stir the entropy pool (like "5 11" or NO).
dmesg_enable="YES"	# Save dmesg(8) to /var/run/dmesg.boot
newsyslog_enable="NO"	# Run newsyslog at startup.
newsyslog_flags=""	# Flags to newsyslog (if enabled).
resident_enable="NO"	# Process /etc/resident.conf
varsym_enable="NO"	# Process /etc/varsym.conf
watchdogd_enable="NO"	# Start the software watchdog daemon

##############################################################
### Jail Configuration #######################################
##############################################################

jail_enable="NO"	# Set to NO to disable starting of any jails
jail_list=""		# Space separated list of names of jails
jail_set_hostname_allow="YES" # Allow root user in a jail to change its hostname
jail_socket_unixiproute_only="YES" # Route only TCP/IP within a jail
jail_sysvipc_allow="NO"	# Allow SystemV IPC use from within a jail

#
# To use rc's built-in jail infrastructure create entries for
# each jail, specified in jail_list, with the following variables.
# NOTES:
# - replace 'example' with the jail's name.
# - except rootdir, hostname and ip, all of the following variables may be made
#   global jail variables if you don't specify a jail name (ie. jail_interface).
#
#jail_example_rootdir="/usr/jail/default"	# Jail's root directory
#jail_example_hostname="default.domain.com"	# Jail's hostname
#jail_example_ip="192.168.0.10"			# Jail's IP number
#jail_example_interface=""			# Interface to create the IP alias on
#jail_example_exec_start="/bin/sh /etc/rc"		# command to execute in jail for starting
#jail_example_exec_stop="/bin/sh /etc/rc.shutdown"	# command to execute in jail for stopping
#jail_example_procfs_enable="NO"		# mount procfs in jail
#jail_example_devfs_enable="NO"			# mount devfs in jail
#jail_example_mount_enable="NO"			# mount/umount jail's fs
#jail_example_fstab=""				# fstab(5) for mount/umount
#jail_example_flags="-l -U root"		# flags for jail(8)

##############################################################
###  VFS quota options #######################################
##############################################################

vfs_quota_enable="NO" # Set to YES to enable handling of these vfs quota options
vfs_quota_sync=""     # Space separated list of mount points or "NO"

##############################################################
###  VKernel options #########################################
##############################################################

vkernel_enable="NO"	# Set to YES to enable starting of vkernels
vkernel_list=""		# Space separated list of names of vkernels
#vkernel_bin="/boot/kernel.VKERNEL64"	# Default path to the vkernel binary
#vkernel_kill_timeout="45"	# Default timeout before a SIGKILL is issued

vknetd_enable="NO"	# Bridged networking
vknetd_flags="-U"	# Bridged networking flags
#
# Create an entry for each vkernel specified in vkernel_list
# replacing 'example' by the name of the vkernel.
#
#vkernel_example_bin="/boot/kernel.VKERNEL64"
	# Path to the vkernel binary
#vkernel_example_memsize="64m"
	# Amount of memory for the vkernel
#vkernel_example_rootimg_list="/var/vkernel/rootimg.01"
	# Space separated list of disk images
#vkernel_example_iface_list="auto:bridge0"
	# Optional: space separated list network interfaces for the vkernel
#vkernel_example_logfile="/dev/null"
	# Optional: path to the console log file
#vkernel_example_flags="-U"
	# Optional: aditional flags to start the vkernel with
#vkernel_example_kill_timeout="45"
	# Optional: timeout before SIGKILL is issued when stopping the vkernel

##############################################################
### Define source_rc_confs, the mechanism used by /etc/rc.* ##
### scripts to source rc_conf_files overrides safely.	    ##
##############################################################

if [ -z "${source_rc_confs_defined}" ]; then
	source_rc_confs_defined=yes
	source_rc_confs () {
		local i sourced_files
		for i in ${rc_conf_files}; do
			case ${sourced_files} in
			*:$i:*)
				;;
			*)
				sourced_files="${sourced_files}:$i:"
				if [ -r $i ]; then
					. $i
				fi
				;;
			esac
		done
	}
fi
