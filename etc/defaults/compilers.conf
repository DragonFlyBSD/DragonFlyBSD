#
# Copyright (c) 2014 The DragonFly Project.  All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of The DragonFly Project nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific, prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
# OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#


STD_INCOPT="-nostdinc -iprefix ${INCPREFIX} -iwithprefixbefore /usr/include"
DPORT_GCC_STD_INCOPTXX="-isystem /usr/local/lib/${CCVER}/include/c++ \
	-isystem /usr/local/lib/${CCVER}/include/c++/${MACHARCH}-portbld-${MACHREL}"
DPORT_CLANG_STD_INCOPTXX="-isystem /usr/include/c++/5.0"


# For each custom compiler definition, it is mandatory to define the
# following variables:
#     <CCVER>_CC         (path to C compiler)
#     <CCVER>_CXX        (path to C++ compiler)
#     <CCVER>_CPP        (path to pre-processor)
#     <CCVER>_INCOPT     (include options for cc, c++ and cpp)
#     <CCVER>_INCOPTCXX  (extra include options for c++)
#
# The following variables are optional:
#     <CCVER>_CFLAGS     (extra CFLAGS)
#     <CCVER>_CXXFLAGS   (extra CXXFLAGS)
#     <CCVER>_CPPFLAGS   (extra CPPFLAGS)
#     <CCVER>_GCOV       (path to gcov, /usr/libexec/gcc50/gcov is default)
#
# The following commands call the base compilers by default:
#     gcc, g++, clang, clang++, clang-cpp
#
# However, these can be individually overridden:
#     <CCVER>_GCC        (path executed when /usr/bin/gcc called)
#     <CCVER>_GXX        (path executed when /usr/bin/g++ called)
#     <CCVER>_CLANG      (path executed when /usr/bin/clang called)
#     <CCVER>_CLANGCXX   (path executed when /usr/bin/clang++ called)
#     <CCVER>_CLANGCPP   (path executed when /usr/bin/clang-cpp called)
#


# lang/gcc5 (dports)
#
gcc5_CC=/usr/local/bin/gcc5
gcc5_CXX=/usr/local/bin/g++5
gcc5_CPP=/usr/local/bin/cpp5
gcc5_GCOV=/usr/local/bin/gcov5
gcc5_INCOPT=${STD_INCOPT}
gcc5_INCOPTCXX=${DPORT_GCC_STD_INCOPTXX}
gcc5_GCC=${gcc5_CC}
gcc5_GXX=${gcc5_CXX}
#
# Put the 3 following lines uncommented in /etc/compilers.conf to force
# /usr/bin/clang* to execute the custom gcc5 compiler instead of base clang
#     gcc5_CLANG=${gcc5_CC}
#     gcc5_CLANGCXX=${gcc5_CXX}
#     gcc5_CLANGCPP=${gcc5_CPP}


# lang/gcc6-devel (dports)
#
gcc6_CC=/usr/local/bin/gcc6
gcc6_CXX=/usr/local/bin/g++6
gcc6_CPP=/usr/local/bin/cpp6
gcc6_GCOV=/usr/local/bin/gcov6
gcc6_INCOPT=${STD_INCOPT}
gcc6_INCOPTCXX=${DPORT_GCC_STD_INCOPTXX}
gcc6_GCC=${gcc6_CC}
gcc6_GXX=${gcc6_CXX}


# lang/gcc49 (dports)
#
gcc49_CC=/usr/local/bin/gcc49
gcc49_CXX=/usr/local/bin/g++49
gcc49_CPP=/usr/local/bin/cpp49
gcc49_GCOV=/usr/local/bin/gcov49
gcc49_INCOPT=${STD_INCOPT}
gcc49_INCOPTCXX=${DPORT_GCC_STD_INCOPTXX}
gcc49_GCC=${gcc49_CC}
gcc49_GXX=${gcc49_CXX}


# lang/gcc48 (dports)
#
gcc48_CC=/usr/local/bin/gcc48
gcc48_CXX=/usr/local/bin/g++48
gcc48_CPP=/usr/local/bin/cpp48
gcc48_GCOV=/usr/local/bin/gcov48
gcc48_INCOPT=${STD_INCOPT}
gcc48_INCOPTCXX=${DPORT_GCC_STD_INCOPTXX}
gcc48_GCC=${gcc48_CC}
gcc48_GXX=${gcc48_CXX}


# lang/clang35 (dports)
#
clang35_CC=/usr/local/bin/clang35
clang35_CXX=/usr/local/bin/clang++35
clang35_CPP=/usr/local/bin/clang-cpp35
clang35_INCOPT=${STD_INCOPT}
clang35_INCOPTCXX=${DPORT_CLANG_STD_INCOPTXX}
clang35_CLANG=${clang35_CC}
clang35_CLANGCXX=${clang35_CXX}
clang35_CLANGCPP=${clang35_CPP}
#
# Put the 2 following lines uncommented in /etc/compilers.conf to force
# /usr/bin/gcc* to execute the custom clang35 compiler instead of base gcc
#     clang35_GCC=${clang35_CC}
#     clang35_GXX=${clang35_CXX}


# lang/clang36 (dports)
#
clang36_CC=/usr/local/bin/clang36
clang36_CXX=/usr/local/bin/clang++36
clang36_CPP=/usr/local/bin/clang-cpp36
clang36_INCOPT=${STD_INCOPT}
clang36_INCOPTCXX=${DPORT_CLANG_STD_INCOPTXX}
clang36_CLANG=${clang36_CC}
clang36_CLANGCXX=${clang36_CXX}
clang36_CLANGCPP=${clang36_CPP}
