It often happens that you have non-Roman text data in Unicode, but you
can't display it -- usually because you're trying to show it to a user
via an application that doesn't support Unicode, or because the fonts
you need aren't accessible.  You could represent the Unicode characters
as "???????" or "\15BA\15A0\1610...", but that's nearly useless to the
user who actually wants to read what the text says.

What Text::Unidecode provides is a function, unidecode(...) that takes
Unicode data and tries to represent it in US-ASCII characters.
